# 변수라는 것은 어떤 값을 담을 수 있는 일종의 공간입니다.

# 변수를 선언하고 값을 넣기 위해서는 다음과 같이 코드를 작성하면 됩니다. 항상 우측에 해당하는 값이 좌측으로 대입되는 식으로 진행됩니다.

# a = 5

# 위의 코드대로면, a라는 변수에 5라는 숫자가 들어가게 되는 것입니다. 이 과정을 거친 이후 a값을 출력하게 되면, 5라는 값이 출력되는 것을 확인할 수 있습니다.

# python3 코드
# a = 5
# print(a)

# 출력결과
# 5

# a가 아니라 다음과 같이 원하는 아무 이름이나 사용해도 됩니다.

# dummy = 32423 

# 위의 예시는 정수 값을 담는 변수에 대한 경우였습니다. 다음과 같이 변수는 문자열을 담을 수도, 실수 값을 담을 수도 있습니다.

# a = "toy"
# b = 3.5346

# type()을 사용하면 자료형을 쉽게 확인할 수 있습니다.

# a = "toy"
# b = 3.5346
# print(type(a)) # <class 'str'>
# print(type(b)) # <class 'float'>

# 정수형, 실수형에 해당하는 변수들 끼리는 더하고(+) 빼고(-) 곱하고(*) 나누는(/) 간단한 사칙연산이 가능합니다.

# 만약 다음과 같이 코드를 작성하게 되면 a와 b의 값을 더한 결과를 변수 c에 저장하게 됩니다. 따라서 두 값을 더한 결과를
# 올바르게 얻게 됩니다.

# python3 코드
# a = 5
# b = 9
# c = a + b
# print("c =", c)

# 출력결과
# c = 14

# python에서 2개 이상의 변수를 선언할 때는 다음과 같이 한 줄에 동시에 선언할 수 있습니다.
# 위의 코드를 다음과 같이 바꿔볼 수 있습니다.

# python3 코드
# a, b = 5, 9
# c = a + b
# print("c =", c)

# 출력결과
# c = 14

# Side Note
# 결국 여러분들은 다른 사람들과 함께 코딩을 하게 될 것입니다.
# 회사나 프로젝트를 통해 다른 사람들과 협업하게 된다면 여러분이 작성하신 코드가 아닌 다른 분들이 작성한 코드를 읽게 될 것입니다.
# 그런데 다른 사람의 코드가 너무 길고, 쓸데없이 지저분하다면 여러분들은 어떨 것 같나요?

# lililililillllil = 5; lililililillliil = 10;
# print(lililililillliil + lililililillliil)

# 놀랍게도 이 코드는 정상적으로 작동하는 코드입니다!

# 이런 불상사를 막기 위해, 우리는 "코딩 컨벤션" (Coding Convention) 이라고 하는 일종의 코드 작성 규약을 정의해두었습니다.
# 물론 그 규약을 안 지킨다고 오류가 나진 않지만, 모두와 협업하기 위해 정해놓은 일종의 "약속" 입니다.

# 각 언어나, 회사에 따라 정의해 놓은 코딩 컨벤션은 다양합니다.
# 일반적으로 변수나 함수명은 소문자로 쓰는 것이 원칙이며, 여러 단어를 사용하는 경우 언더바 (Underscore)를 사용합니다.

# 즉,

# hello sam chavo will make_prime get_numbers
# 같은 방식으로 이름을 짓는 것을 권장하며,

# Hello sAm ChaVo WILL MAKE_____Prime GetNumbers
# 같은 이름은 사용하지 않기를 권장합니다.

# 물론 지금 여러분들이 저 규약을 엄격히 지키라는 이야기는 아니고, 이런게 있다 정도만 생각하시면 충분합니다.

# ---------------------------------------------------------------------------------------------

a, b = 97, 13
print('97 - 13 =', a-b)